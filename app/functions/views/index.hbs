<!DOCTYPE html>
<html>
  <head>
    <meta content="width=device-width, initial-scale=1.0, user-scalable=no" name="viewport">
    <meta name="description" content="台東区周辺のテイクアウトできるお店を地図上に公開しています。">
    <title>台東区周辺のテイクアウト可能なお店マップ</title>
    <meta property="og:url" content="https://takeoutmap-6fe47.web.app/">
    <meta property="og:title" content="台東区周辺のテイクアウト可能なお店マップ">
    <meta property="og:description" content="台東区周辺のテイクアウトできるお店を地図上に公開しています。">
    <meta property="og:image" content="https://firebasestorage.googleapis.com/v0/b/takeoutmap-6fe47.appspot.com/o/og_images%2Ftakeaway-logo.png?alt=media&token=d0406e50-09c4-48b4-970d-38b8f99f51e1">
    <meta property="og:type" content="website">
    <meta property="og:locale" content="ja_JP">
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:description" content="台東区周辺のテイクアウトできるお店を地図上に公開しています。">
    <meta name="twitter:image" content="https://firebasestorage.googleapis.com/v0/b/takeoutmap-6fe47.appspot.com/o/og_images%2Ftakeaway-logo.png?alt=media&token=d0406e50-09c4-48b4-970d-38b8f99f51e1">
    <style>
      *,
      *:before,
      *:after {
        -webkit-box-sizing: border-box;
           -moz-box-sizing: border-box;
            -ms-box-sizing: border-box;
             -o-box-sizing: border-box;
                box-sizing: border-box;
      }
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 100%;
        width: 100%;
      }
      #wrap {
        width: 100%;
        height: 100%;
        display: -webkit-box;
        display: -ms-flex;
        display: flex;
        -webkit-flex-direction: column;
            -ms-flex-direction: column;
                flex-direction: column;
        align-items: center;
      }
      #notification {
        width: 100%;
        padding: 10px;
      }
      @media screen and (min-width: 1000px) {
        #notification {
          width: 1000px;
        }
      }
      #notification p {
        margin-top: 3px;
        margin-bottom: 3px;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      body {
        color: #333;
        font-family: "ヒラギノ角ゴ Pro W3", "Hiragino Kaku Gothic Pro", "メイリオ", Meiryo, Osaka, "ＭＳ Ｐゴシック", "MS PGothic", sans-serif;
        font-size: 70.0%;
        line-height: 130%;
        -webkit-text-size-adjust: 100%;
      }
    </style>
  </head>
  <body>
    <div id="wrap">
      <div id="map"></div>
      <div id="notification">
        <p>緊急事態宣言の発令に伴い、飲食店の営業内容が一時的に変更・休止となっている場合がございます。 最新情報につきましては、店舗まで直接お問い合わせください。</p>
        <p>掲載情報は、内容を保証するものではありません。また、掲載された飲食店に関する情報によって生じた損害や、トラブル等について補償及び関与はいたしません。</p>
        <p>現在地を表示するために位置情報を取得するように修正しましたが、分析目的などで収集は行っていません。位置情報取得を拒否してもサービス利用に影響はありません。</p>
      </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"
        integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo="
        crossorigin="anonymous"></script>
    <script src="https://www.gstatic.com/firebasejs/7.14.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/7.14.0/firebase-analytics.js"></script>

    <script>
      const DEFAULT_LAT = 35.713810;
      const DEFAULT_LNG = 139.786312;
      var map, infoWindow, myMarker;
      // Your web app's Firebase configuration
      var firebaseConfig = {
        apiKey: "AIzaSyCsptW0-mKdg3i9Zix-blrjK809ERFJqVM",
        authDomain: "takeoutmap-6fe47.firebaseapp.com",
        databaseURL: "https://takeoutmap-6fe47.firebaseio.com",
        projectId: "takeoutmap-6fe47",
        storageBucket: "takeoutmap-6fe47.appspot.com",
        messagingSenderId: "445449285973",
        appId: "1:445449285973:web:b164c87ef82d0097387fdc",
        measurementId: "G-6ENTTFF8BB"
      };
      // Initialize Firebase
      firebase.initializeApp(firebaseConfig);
      firebase.analytics();

      /**
       * Creates a map object with a click listener and a heatmap.
       */
      function initMap() {
        const latlng = new google.maps.LatLng(Number(DEFAULT_LAT),Number(DEFAULT_LNG));
        map = new google.maps.Map(document.getElementById('map'), {
          center: latlng,
          zoom: 15,
          styles: [{
            featureType: 'poi',
            stylers: [{ visibility: 'off' }]  // Turn off POI.
          },
          {
            featureType: 'transit.station',
            stylers: [{ visibility: 'off' }]  // Turn off bus, train stations etc.
          }],
          disableDoubleClickZoom: true,
          streetViewControl: false,
          fullscreenControl: true
        });

        infoWindow = new google.maps.InfoWindow;

        renderMarker();
        renderCurrentMarker();
      }

      function renderMarker() {
        const marker = [];
        const infoWindow = [];
        let url = `${location.protocol}//${location.host}`;
        if (location.pathname.length > 1) {
          url += location.pathname;
        }
        url += '/api/shops';
        if (location.search.length > 1) {
          url += location.search;
        }
        console.log(url);

        $.ajax({
          type: 'GET',
          'header': {
            "Content-type": "application/json; charset=UTF-8"
          },
          url: url,
          dataType: 'json',
          success: function(json) {
            for (let i = 0; json.shops.length > i; i++) {
              let data = json.shops[i];
              const latlng = new google.maps.LatLng(Number(data.lat),Number(data.lng));
              marker[i] = new google.maps.Marker({ // マーカーの追加
                 position: latlng, // マーカーを立てる位置を指定
                 map: map // マーカーを立てる地図を指定
              });
              var popup = data.name + '<br/>' + data.addr;
              if (data.phone && data.phone != "null") {
                  popup += '<br/><a href="tel:' + data.phone + '">' + data.phone + '</a>';
              }
              if (data.web && data.web != "null") {
                  popup += '<br/><a href="'+ data.web + '" target="_blank">' + data.web + '</a>';
              }
              infoWindow[i] = new google.maps.InfoWindow({ // 吹き出しの追加
                  content: popup // 吹き出しに表示する内容
              });
              marker[i].addListener('click', function() { // マーカーをクリックしたとき
                  infoWindow[i].open(map, marker[i]); // 吹き出しの表示
              });
            }
          }
        });
      }

      function renderCurrentMarker() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };

            myMarker = new google.maps.Marker({
              map: map,
              position: pos,
              animation: google.maps.Animation.BOUNCE,
              icon: {
                url: 'images/pin.png',
                scaledSize: new google.maps.Size(22, 28)
              }
            });
          });
        } else {
          // Browser doesn't support Geolocation
          handleLocationError(false, infoWindow, map.getCenter());
        }
      }

      function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
                              'Error: The Geolocation service failed.' :
                              'Error: Your browser doesn\'t support geolocation.');
        infoWindow.open(map);
      }
      </script>
      <script async defer
          src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCBRyB4hDPw4nk--UDEVKbhKTxJZvfQVsw&libraries=visualization&callback=initMap">
    </script>
  </body>
</html>

